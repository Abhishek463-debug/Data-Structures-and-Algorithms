
class Node:
    def __init__(self, data, next = None, prev = None):
        self.data = data
        self.next = None
        self.prev = None

class LinkedList:
    def __init__(self):
        self.head = None
    

    def insert_begin(self, data):
        node = Node(data)
        node.next = self.head
        node.prev = None
        if self.head is not None:
            self.head.prev = node
        self.head = node
        
    def insert_end(self,data):
        if self.head is None:
            self.head = Node(data, None, None)
            return
        dummy = self.head
        while dummy.next:
            dummy = dummy.next
        dummy.next = Node(data, None, dummy)
    
    def print(self):
        if self.head is None:
            print("Empty list!")
        dummy = self.head
        linkedstr = ""
        while dummy:
            linkedstr += str(dummy.data)+ "-->"
            dummy = dummy.next
        print(linkedstr)

    def length(self):
        length = 0
        dummy = self.head
        while dummy:
            length += 1
            dummy= dummy.next
        return length

    def insert_middle(self,data, idx):
        if idx >= self.length():
            self.insert_end(data)
        elif idx < 0:
            print("Invalid index")
        elif idx == 0:
            self.insert_begin(data)
        else:
            count = 0
            dummy = self.head
            while dummy:
                if count == idx-1:
                    node = Node(data)
                    node.next = dummy.next
                    dummy.next = node
                    node.prev = dummy
                    dummy.next.prev = node
                    break
                dummy = dummy.next
                count += 1
    def remove_idx(self, idx):
        if idx < 0 or idx >= self.length():
            raise Exception("Index out of range!")
        if idx == 0:
            self.head = self.head.next
            return
        count = 0
        dummy = self.head
        while dummy:
            if count == idx-1:
                dummy.next = dummy.next.next
                if dummy.next is None:
                    return
                else:
                    dummy.next.prev = dummy
                break
            dummy = dummy.next
            count += 1

                   



ll = LinkedList()
ll.print()
ll.insert_begin(1)
ll.insert_end(2)
ll.insert_end(300)
ll.insert_begin(10)
ll.insert_end(1020)
ll.insert_middle(10, 0)
ll.insert_middle(12,1)
ll.insert_middle(100, 4)
ll.remove_idx(3)
ll.print()
print(ll.length())
